{"version":3,"sources":["logo.svg","components/Icons.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Icons","name","className","Footer","itemArray","Array","fill","App","useState","isPlayer","setIsPlayer","winMsg","setWinMsg","count","setCount","isMove","setIsMove","isSelected","setIsSelected","oldPos","setOldPos","possiblity","newPos","goMove","trunIcon","checkIsWinner","changeItem","itemNumber","toast","type","position","isPossible","removeBp","map","item","index","moveItem","itemPosition","newP","oldP","canMove","Container","Row","Col","md","Button","color","block","onClick","Card","CardBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d13e2f09.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport {FaMapMarker, FaPen, FaRegCircle} from \"react-icons/fa\"\r\n\r\n\r\n\r\nconst Icons = ({name}) =>{\r\n    switch (name) {\r\n        case 'player1':\r\n            return <FaMapMarker className=\"green\"/>\r\n        \r\n        case 'player2':\r\n            return <FaMapMarker className=\"red\"/>\r\n            \r\n        case 'bplayer1':\r\n            return <FaMapMarker className=\"bigp1\"/>\r\n\r\n        case 'bplayer2':\r\n                return <FaMapMarker className=\"bigp2\"/>\r\n\r\n        default:\r\n            return \"\"\r\n    }\r\n}\r\n\r\nexport default Icons;","import React from \"react\"\r\n\r\n\r\n\r\n\r\nconst Footer= () =>{\r\n    return(\r\n\r\n        <div className=\"container footer text-white\">\r\n             <div className=\"row justify-content-between\">\r\n                 <div className=\"col-4\">\r\n                    <p>&copy; Tic-Tac-Toe</p>\r\n                 </div>\r\n                 <div className=\"col-4\">\r\n                     <p>Designed by Basavaraja</p>\r\n                 </div>\r\n              </div>\r\n\r\n              \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default Footer;","import logo from './logo.svg';\nimport React , {useState} from \"react\"\nimport Icons from './components/Icons';\nimport Footer from './components/Footer'\n\n// toastify imports\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Card, CardBody, Container, Button, Col, Row} from \"reactstrap\"\n\n//import bootstarp css\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.css';\nimport { icons } from 'react-icons/lib';\n\nconst itemArray= new Array(9).fill(\"empty\")\n\nconst App = () => {\n\n  const [isPlayer, setIsPlayer] = useState(0)\n  const [winMsg, setWinMsg] = useState(\"\")\n  const [count, setCount]= useState(0)\n  const [isMove, setIsMove]= useState(false)\n  const [isSelected, setIsSelected]= useState(\"\")\n  // const [possiblity, setPossiblity] = useState(false)\n  var [oldPos, setOldPos] = useState();\n\n  const reloadGame= () =>{\n    setIsPlayer(false);\n    setWinMsg(\"\");\n    setCount(0);\n    itemArray.fill(\"empty\", 0,9);\n  }\n  var possiblity=\"false\";\n  // var oldPos= null\n  var newPos= null\n  var goMove=\"false\"\n  const trunIcon= isPlayer? \"player2\": \"player1\"\n\n  const checkIsWinner = () =>{\n    if (itemArray[0]=== itemArray[1] &&\n      itemArray[0] === itemArray[2] &&\n      itemArray[0] !==\"empty\"\n      ){\n        setWinMsg(`${itemArray[0]} won`)\n      }else if(\n        itemArray[3] === itemArray[4] &&\n        itemArray[3] === itemArray[5] &&\n        itemArray[3] !== \"empty\"\n      ){\n        setWinMsg(`${itemArray[3]} won`)\n      }else if(\n        itemArray[6] === itemArray[7] &&\n        itemArray[6] === itemArray[8] &&\n        itemArray[6] !== \"empty\"\n      ){\n        setWinMsg(`${itemArray[6]} won`)\n      }else if(\n        itemArray[3] === itemArray[4] &&\n        itemArray[3] === itemArray[5] &&\n        itemArray[3] !== \"empty\"\n      ){\n        setWinMsg(`${itemArray[3]} won`)\n      }else if(\n        itemArray[0] === itemArray[3] &&\n        itemArray[0] === itemArray[6] &&\n        itemArray[0] !== \"empty\"\n      ){\n        setWinMsg(`${itemArray[0]} won`)\n      }else if(\n        itemArray[1] === itemArray[4] &&\n        itemArray[1] === itemArray[7] &&\n        itemArray[1] !== \"empty\"\n      ){\n        setWinMsg(`${itemArray[1]} won`)\n      }else if(\n        itemArray[2] === itemArray[5] &&\n        itemArray[2] === itemArray[8] &&\n        itemArray[2] !== \"empty\"\n      ){\n        setWinMsg(`${itemArray[2]} won`)\n      }\n      // else if(\n      //   itemArray[0] === itemArray[4] &&\n      //   itemArray[0] === itemArray[8] &&\n      //   itemArray[0] !== \"empty\"\n      // ){\n      //   setWinMsg(`${itemArray[0]} won`)\n      // }else if(\n      //   itemArray[2] === itemArray[4] &&\n      //   itemArray[2] === itemArray[6] &&\n      //   itemArray[2] !== \"empty\"\n      // )\n      // {\n      //   setWinMsg(`${itemArray[2]} won`)\n      // }\n\n  }\n\n  const isPossible = (position)=>{\n    \n    // oldPos= position;\n    setOldPos(oldPos=position)\n    // console.log(\"old pos is \", oldPos);\n\n\n      if (itemArray[position]!==\"empty\") {\n        switch (position) {\n          case 0:\n            if ((itemArray[1] === \"empty\") || (itemArray[3] === \"empty\") ){\n              // console.log(\"im inside pos 0 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 1:\n            if ((itemArray[0]=== \"empty\") || (itemArray[2]=== \"empty\") || (itemArray[4]=== \"empty\") ) {\n              // console.log(\"im inside pos 1 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 2:\n            if ((itemArray[1] === \"empty\") || (itemArray[5] === \"empty\")){\n              // console.log(\"im inside pos 2 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 3:\n            if ((itemArray[0]=== \"empty\") || (itemArray[6]=== \"empty\") || (itemArray[4]=== \"empty\") ){\n              // console.log(\"im inside pos 3 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 4:\n            if ((itemArray[1] === \"empty\") || \n                (itemArray[3] === \"empty\") || \n                (itemArray[5] === \"empty\") || \n                (itemArray[7] ) === \"empty\"){\n              // console.log(\"im inside pos 4 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            \n            break;\n\n          case 5:\n            if ((itemArray[2]=== \"empty\") || (itemArray[8]=== \"empty\") || (itemArray[4]=== \"empty\") ){\n              // console.log(\"im inside pos  5 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 6:\n            if ((itemArray[3] === \"empty\") || (itemArray[7] === \"empty\")){\n              // console.log(\"im inside pos 6 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 7:\n            if ((itemArray[6]=== \"empty\") || (itemArray[8]=== \"empty\") || (itemArray[4]=== \"empty\") ){\n              // console.log(\"im inside pos 7 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;\n\n          case 8:\n            if ((itemArray[5] === \"empty\") || (itemArray[7] === \"empty\")){\n              // console.log(\"im inside pos 8 chek\");\n              possiblity=\"true\"\n              return possiblity\n            }\n            break;  \n            \n\n          default:\n            possiblity=\"false\"\n            return possiblity\n            break;\n        }\n      }\n  }\n\n \n\n  const changeItem = (itemNumber) =>{\n    if(winMsg){\n      return toast(winMsg, {type: \"success\"})\n    }\n\n    isPossible(itemNumber);// checks the possibilty of coin selection\n\n    if((itemArray[itemNumber] === \"empty\") && count<6){\n      itemArray[itemNumber] = isPlayer ? \"player2\": \"player1\"\n      setIsPlayer(!isPlayer)\n      setCount(count+1)\n    }else if ((itemArray[itemNumber] === \"empty\") && (count>=6)){\n      return toast(\"Move the player\", {type:\"error\"})\n    }\n    \n    if((itemArray[itemNumber] !== \"empty\")) {\n      if((count===6)){\n        if(possiblity=== \"true\"){\n          // console.log(\"inside\");\n          if(itemArray[itemNumber] === \"player1\") {\n            itemArray[itemNumber] = \"bplayer1\"\n            setCount(count+1)\n            // console.log(count);\n            setIsSelected(\"bp1\");\n            setIsMove(!isMove);\n            possiblity=\"false\"\n            }else {\n              return toast(\"Its player1 turn\", {type:\"error\"})\n            }\n        }else{\n          return toast(\"Cannot move\", {type:\"error\"})\n        }\n        \n        }\n              \n           \n    } \n\n    \n    if((itemArray[itemNumber] !== \"empty\") && (count>6)){\n      if(itemArray[itemNumber] === \"player1\"){\n        if(isPlayer=== false){\n          if(possiblity===\"true\"){\n            itemArray[itemNumber] = \"bplayer1\"\n            setIsSelected(\"bp1\")\n            setIsMove(!isMove)\n            possiblity=\"false\"\n          }else \n            {\n              return toast(\"Cannot move\", {type:\"error\"})\n            }\n          }else{\n            return toast(\"Its player2's turn\",{type:\"error\"})\n          }\n      }\n\n      if(itemArray[itemNumber] === \"player2\"){\n        if(isPlayer=== true){\n          if(possiblity=== \"true\"){\n            itemArray[itemNumber] = \"bplayer2\"\n            setIsSelected(\"bp2\")\n            setIsMove(!isMove)\n            possiblity=\"false\"\n          }else \n          {\n            return toast(\"Cannot move\", {type:\"error\"})\n          }\n\n          } else{\n            return toast(\"Its player1's turn\",{type:\"error\"})\n          }\n      }      \n      \n    }\n\n    checkIsWinner();\n  }\n\n  const removeBp= ()=>{\n    itemArray.map((item,index)=>{\n      // console.log(item);\n      if(item ===\"bplayer1\"){\n        itemArray[index]= \"empty\"\n      }else if(item ===\"bplayer2\"){\n        itemArray[index]= \"empty\"\n        \n      }\n    })\n  }\n\n  const canMove=(newP, oldP)=>{\n    // console.log(\"newP\", newP);\n    // console.log(\"oldP\",oldP);\n\n    // if(newP===oldP){\n    //   if(itemArray[newP] === \"bplayer1\") {\n    //     itemArray[newP] = \"player1\"\n    //   }else{\n    //     itemArray[newP] = \"player2\"\n    //   }\n    // }\n\n    switch (oldP) {\n      case 0:\n        if ((newP===1)||(newP===3)){\n          // console.log(\"i m inside oldP 0\");\n          return goMove= \"true\"\n        }\n        break;\n      \n      case 1:\n        if ((newP===0)||(newP===2)||(newP===4)){\n          // console.log(\"i m inside oldP 1\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 2:\n        if ((newP===1)||(newP===5)){\n          // console.log(\"i m inside oldP 2\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 3:\n        if ((newP===0)||(newP===6)||(newP===4)){\n          // console.log(\"i m inside oldP 3\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 4:\n        if ((newP===1)||(newP===3)||(newP===5)||(newP===7)){\n          // console.log(\"i m inside oldP 4\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 5:\n        if ((newP===2)||(newP===8)||(newP===4)){\n          // console.log(\"i m inside oldP 5\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 6:\n        if ((newP===3)||(newP===7)){\n          // console.log(\"i m inside oldP 6\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 7:\n        if ((newP===6)||(newP===8)||(newP===4)){\n          // console.log(\"i m inside oldP 0\");\n          return goMove= \"true\"\n        }\n        break;\n\n      case 8:\n        if ((newP===5)||(newP===7)){\n          // console.log(\"i m inside oldP 0\");\n          return goMove= \"true\"\n        }\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  const moveItem = (itemPosition) =>{\n    newPos=itemPosition;\n    // console.log(\"new pos is\", newPos);\n\n    canMove(newPos, oldPos);// checking can move?\n\n    if ((itemArray[itemPosition]=== \"empty\") && (isSelected=== \"bp1\")){\n        if(goMove===\"true\"){\n          itemArray[itemPosition] = \"player1\"\n          setIsPlayer(!isPlayer)\n          removeBp()\n          setIsMove(!isMove)\n        } else{\n          return toast(\"Cannot jump\", {type:\"error\"})\n        }\n      }else if ((itemArray[itemPosition]=== \"empty\") && (isSelected === \"bp2\")){\n        if(goMove===\"true\"){\n          itemArray[itemPosition] = \"player2\"\n          setIsPlayer(!isPlayer)\n          removeBp()\n          setIsMove(!isMove)\n        }else{\n          return toast(\"Cannot jump\", {type:\"error\"})\n        }\n      }else if(oldPos===newPos) {\n        if(itemArray[newPos] === \"bplayer1\") {\n          itemArray[newPos] = \"player1\"\n          removeBp()\n          setIsMove(!isMove)\n        }else{\n          itemArray[newPos] = \"player2\"\n          removeBp()\n          setIsMove(!isMove)\n        }\n    }else {\n      return toast(\"Select empty box to move\", {type:\"error\"})\n    }\n\n    checkIsWinner();\n\n  }\n\n  return (\n    \n    <Container className=\"p-5\">\n      <h1 className='title'> TIC TAC TOE</h1>\n      <ToastContainer position=\"bottom-center\"/>\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          {winMsg ? (\n            <div className=\"mb-2 mt-2\">\n              <h1 className=\"text-success text-uppercase text-center\">\n                {winMsg}\n              </h1>\n              <Button\n              color=\"success\"\n              block\n              onClick= {reloadGame}>Reload the game </Button> \n            </div>\n          ) : (\n            <div>\n              <h1 className=\"text-warning\">\n              {isPlayer ? \"Player2\": \"Player1\"}'s turn\n              <Icons name={trunIcon}/>\n            </h1>\n            </div>\n          )}\n          <div className=\"grid\">\n            {itemArray.map((item, index)=>{\n                // console.log(item); wrote coz --> icon css has bug\n               return(\n                <Card color=\"warning\" onClick= {isMove? (()=> moveItem(index)):(()=> {changeItem(index)})}>\n                  <CardBody className= \"box\">\n                    <Icons name={item}/>\n                  </CardBody>\n                </Card>\n               )\n            })}\n          </div>\n        </Col>\n        {/* <Col md={6} className=\"offset-md-3 text-white\" >\n          <h2>Player1 -- <Icons name=\"player1\"/></h2>\n          <h2>Player2 -- <Icons name=\"player2\"/></h2>\n        </Col> */}\n      </Row>\n\n     \n\n            <Footer/>\n            \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}